{"version":3,"sources":["logo.svg","components/auth/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/contents/Contents.js","services/portfolioservices.js","components/portfolioList/PortfolioCard.js","components/portfolioList/AddPortfolio.js","components/portfolioList/PortfolioList.js","services/workservices.js","components/workList/WorkCard.js","components/workList/AddWork.js","components/workList/WorkList.js","components/footer/Footer.js","components/match/Match.js","components/FinalPortfolios/FinalPortfolios.js","components/portfolioDetails/PortfolioDetails.js","components/workDetails/WorkDetails.js","services/fileservices.js","components/portfolioForm/CreatePortfolio.js","components/portfolioForm/EditPortfolio.js","components/workForm/CreateWork.js","components/workForm/EditWork.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","withCredentials","Navbar","props","handleLogout","e","state","loggedInUser","nextProps","setState","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","onClick","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","target","name","value","onSubmit","onChange","Login","Contents","Services","getAllUsers","getUserDetail","getPortfoliosFromUser","user_id","createPortfolioPost","portfolio","getAllPortfolios","getPortfolioDetail","getPortfolioWorks","console","log","deletePortfolio","delete","createPortfolioGet","editPortfolioToGet","editPortfolioToPost","editPortfolioCover","PortfolioCard","_id","title","subtitle","imagecover","src","width","alt","pathname","_handleDelete","AddPortfolio","PortfolioList","componentDidMount","services","userId","allPortfolios","portfolios","err","portfolio_id","portfolioId","updatePortfolio","userData","Portfolioservices","length","map","key","alias","refreshList","getWorksFromUser","getAllWorks","getWorkDetail","deleteWork","createWorkGet","createWorkPost","work","editWorkToGet","editWorkToPost","deleteWorkImage","createImageWork","WorkCard","image","description","AddWork","WorkList","allWorks","works","work_id","workId","setTimeout","updateWork","Workservices","Footer","Match","portfolioData","workservices","allportfolioworks","portfolioworks","portfoliowork","FinalPortfolios","imageUrl","PortfolioDetails","match","params","theportfolio","WorkDetails","thework","handleUpload","theFile","CreatePortfolio","finishAction","portfolioServices","handleSubmit","handleFileUpload","uploadData","FormData","append","files","filesServices","secure_url","FilesServices","Form","Group","Label","Control","Button","variant","EditPortfolio","CreateWork","workServices","EditWork","App","componentDidUpdate","prevProps","prevState","fetchUser","userObj","Fragment","userInSession","path","render","exact","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.55a4238c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `http://localhost:4000/api/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService\";\nimport logo from \"../../logo.svg\";\nimport \"./Navbar.css\"\n\n\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark container-fluid\">\n          <span className=\"navbar-brand\" href=\"#\">PortfolioGenerator</span>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  {/* <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a> */}\n                  <Link to=\"/home\" className=\"nav-link\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                  {/* <a className=\"nav-link\" href=\"#\">Match</a> */}\n                  <Link to=\"/match\" className=\"nav-link\">Match</Link>\n                </li>\n                <li className=\"nav-item\">\n                  {/* <a className=\"nav-link\" href=\"#\">Portfolios</a> */}\n                  <Link to=\"/portfolios\" className=\"nav-link\">Portfolios</Link>\n                </li>\n              </ul>\n              <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                  <ul className=\"navbar-nav ml-auto\">\n                      <li className=\"nav-item\">\n                          <span className=\"nav-link\">{this.state.loggedInUser.username}</span>\n                      </li>\n                      <li className=\"nav-item\">\n                          <span className=\"nav-link\"><span onClick={this.handleLogout}>Logout</span></span>\n                      </li>\n                  </ul>\n              </div>\n          </div>\n        </nav>\n        \n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul>\n              <li>\n                <Link to=\"/signup\">Signup</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport AuthService from './AuthService'\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Welcome!, create your account next:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService';\nimport \"./login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div className=\"login\">\n      <span className=\"megatitle\">Portfolio Generator</span>\n      <span className=\"megasubtitle\">Create multiple portfolios at once. If you are a web designer, an illustrator and a photographer, now you can have a portfolio for each one of your profiles. It is easy and fast. We have big achievements in the job market using our tool. </span>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username: </label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password: </label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\n\n//clase componente que renderiza los contenidos genéricos\n//usando rendering condicional y el componente Switch que ya conocéis podéis mostrar los contenidos oportunos que queráis\nclass Contents extends Component {\n  render() {\n    return (<div>\n        {/* <p>Content - The quick brown fox jumps over the lazy dog.</p> */}\n        </div>);\n    \n  }\n}\n\nexport default Contents;\n\n\n  ","import axios from \"axios\";\n\nexport default class Services {\n  constructor() {\n    this.service = axios.create({\n      baseURL: \"http://localhost:4000/api/portfolios\",\n      withCredentials: true\n    });\n  }\n\n  //User\n  getAllUsers = () =>\n    this.service.get(\"/allusers\").then(response => response.data);\n  getUserDetail = () =>\n    this.service.get(\"/user/:id\").then(response => response.data);\n\n  getPortfoliosFromUser = user_id =>\n    this.service\n      .get(\"/userportfolios\", user_id)\n      .then(response => response.data);\n\n  //Portfolio\n  //postCoaster = coaster => this.service.post(`/new`, coaster).then(response => response.data)\n  createPortfolioPost = portfolio =>\n    this.service\n      .post(\"/newportfolio\", portfolio)\n      .then(response => response.data);\n\n  getAllPortfolios = () =>\n    this.service.get(\"/allportfolios\").then(response => response.data);\n\n  // getPortfolioDetail = id =>\n  //   this.service.get(\"/portfolio/:id\").then(response => response.data);\n\n  getPortfolioDetail = id =>\n    this.service.get(`/portfolio/${id}`).then(response => response.data);\n\n  getPortfolioWorks = id =>\n    this.service.get(`/portfolio/${id}/works`).then(response => {\n      console.log(\"getPortfolioWorks\")\n      console.log(id)\n      return response.data\n    });\n\n  // getPortfolioWorks = () =>\n  //   this.service.get(\"/portfolio/:id/works\").then(response => response.data);\n\n  deletePortfolio = id =>\n    this.service\n      .delete(`/portfolio/delete/${id}`)\n      .then(response => response.data);\n\n  createPortfolioGet = () =>\n    this.service.get(\"/newportfolio\").then(response => response.data);\n\n  //createPortfolioPost = () =>\n  //this.service.post(\"/newportfolio\").then(response => response.data);\n  editPortfolioToGet = () =>\n    this.service.get(\"/portfolio/:id\").then(response => response.data);\n\n  editPortfolioToPost = id =>\n    this.service.get(`/editportfolio/${id}`).then(response => response.data);\n\n  // editPortfolioToPost = () =>\n  //   this.service.post(\"/editportfolio/:id\").then(response => response.data);\n\n  editPortfolioCover = () =>\n    this.service\n      .post(\"/editportfoliocover/:id\")\n      .then(response => response.data);\n}\n\n/*\nRoute changed adding \"/portfolios\"\nSo what I had as http://localhost:4000/portfolios/userportfolios\nis now http://localhost:4000/api/portfolios/userportfolios\n*/\n","import React, { Component } from \"react\";\nimport \"./PortfolioCard.css\";\n\nimport { Link } from \"react-router-dom\";\n\nconst PortfolioCard = ({\n  _id,\n  title,\n  subtitle,\n  imagecover,\n  deletePortfolio\n}) => {\n  const _handleDelete = event => {\n    event.preventDefault();\n    {\n      deletePortfolio({ _id });\n    }\n  };\n\n  return (\n    <div className=\"card2 text-white bg-dark mb-3 border border-white\">\n      <img\n        src={imagecover}\n        width=\"240px\"\n        className=\"card-img-top\"\n        alt=\"whatever\"\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text2\">{subtitle}</p>\n        <button className=\"btn btn-light\">\n          <Link to={{ pathname: `/portfolio/${_id}` }}>See more</Link>\n        </button>\n        <button\n          className=\"btn btn-light\"\n          onClick={event => _handleDelete(event)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioCard;\n\n/*\nComing from my father:\n            key={portfolio._id} \n            alias={portfolio.alias}  \n            title={portfolio.title}\n            subtitle={portfolio.subtitle}\n            imagecover={portfolio.imagecover}\n*/\n","import React, { Component } from \"react\";\nimport \"./PortfolioCard.css\";\nimport Button from 'react-bootstrap/Button';\n\nimport { Link } from 'react-router-dom';\n\n\nconst AddPortfolio = () => {\n    \n  return (\n       \n       <div className=\"card2 text-white bg-dark mb-3 border border-white\">\n                <img src=\"https://source.unsplash.com/collection/429524/800x450\" width=\"240px\" className=\"card-img-top\" alt=\"whatever\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Create a new Portfolio</h5>\n                    <p className=\"card-text\"></p>\n                    {/* <p className=\"card-text\">id = {_id}</p> */}\n                    <button className=\"btn btn-light\">\n                        <Link to={{pathname: `/newportfolio`}}>Create now</Link>\n                    </button>               \n                </div> \n        </div> \n  );\n};\n\nexport default AddPortfolio;\n\n","import React, { Component } from \"react\";\n\nimport Portfolioservices from \"../../services/portfolioservices\";\nimport PortfolioCard from \"./PortfolioCard\";\nimport AddPortfolio from \"./AddPortfolio\";\nimport \"./PortfolioList.css\";\n\n\nclass PortfolioList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      portfolios: [],\n      userId: this.props.userData._id\n    };\n    this.services = new Portfolioservices();\n  }\n\n  componentDidMount = () => {\n    this.getPortfoliosFromUser();\n  };\n\n  getPortfoliosFromUser = () => {\n    this.services\n      .getPortfoliosFromUser(this.state.userId)\n      .then(allPortfolios => {\n        return this.setState({\n          portfolios: allPortfolios\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deletePortfolio = portfolio_id => {\n    let portfolioId = portfolio_id._id;\n    this.services\n      .deletePortfolio(portfolioId)\n      .then(() => this.updatePortfolio())\n      .catch(err => console.log(err));\n  };\n\n  updatePortfolio = () => {\n    this.services\n      .getPortfoliosFromUser(this.state.userId)\n      .then(portfolios => this.setState({ portfolios: portfolios }))\n      .then(() => this.props.updatePortfolio()) \n      .catch(err => console.log(err));\n  };\n\n\n\n  render() {\n    // console.log(this.state.portfolios);\n    return (\n      <div id=\"content\">\n        <h1>Portfolios</h1>\n        \n        <div className=\"containerList\">\n          {this.state.portfolios.length ? (\n            this.state.portfolios.map(portfolio => (\n              <PortfolioCard\n                _id={portfolio._id}\n                key={portfolio._id}\n                alias={portfolio.alias}\n                title={portfolio.title}\n                subtitle={portfolio.subtitle}\n                imagecover={portfolio.imagecover}\n                deletePortfolio={portfolio_id =>\n                  this.deletePortfolio(portfolio_id)\n                }\n              />\n            ))\n          ) : (\n            <p>CARGANDO...</p>\n          )}\n        </div>\n        <AddPortfolio refreshList={this.getPortfoliosFromUser}/>\n      </div>\n    );\n  }\n}\n\nexport default PortfolioList;\n","import axios from \"axios\";\n\nexport default class Services {\n  constructor() {\n    this.service = axios.create({\n      baseURL: \"http://localhost:4000/works\",\n      withCredentials: true\n    });\n  }\n\n  //Work\n  getWorksFromUser = user_id =>\n    this.service\n      .get(\"/userworks\", user_id)\n      .then(response => response.data);\n\n  getAllWorks = () =>\n    this.service.get(\"/allworks\").then(response => response.data);\n   \n\n  getWorkDetail = id =>\n    this.service.get(`/work/${id}`).then(response => response.data);\n\n  deleteWork = id => {\n    this.service\n      .delete(`/work/delete/${id}`)\n      .then(response => response.data);  \n  }\n  // deleteWork = () =>\n  //   this.service.delete(\"/work/delete/:id\").then(response => response.data);\n\n  createWorkGet = () =>\n    this.service.get(\"/newwork\").then(response => response.data);\n\n  createPortfolioPost = portfolio =>\n    this.service\n      .post(\"/newportfolio\", portfolio)\n      .then(response => response.data);\n\n  createWorkPost = work =>\n    this.service\n    .post(\"/newwork\", work)\n    .then(response => response.data);\n\n  editWorkToGet = () =>\n    this.service.get(\"/editwork/:id\").then(response => response.data);\n  editWorkToPost = () =>\n    this.service.post(\"/editwork/:id\").then(response => response.data);\n\n  //Image\n  deleteWorkImage = () =>\n    this.service.delete(\"/deleteImageWork/:id\").then(response => response.data);\n  createImageWork = () =>\n    this.service.post(\"/uploadImageWork/:id\").then(response => response.data);\n}\n","import React, { Component } from \"react\";\nimport \"./WorkCard.css\";\n\nimport { Link } from \"react-router-dom\";\n\nconst WorkCard = ({ \n    _id,\n    title, \n    subtitle, \n    description, \n    image, \n    deleteWork \n}) => {\n    const _handleDelete = event => {\n        event.preventDefault();\n        {\n          deleteWork({ _id });\n        }\n      };\n  return (\n    <div>\n      <div className=\"card2 text-white bg-dark mb-3 border border-white\">\n        <img\n          src={image}\n          width=\"240px\"\n          className=\"card-img-top\"\n          alt=\"whatever\"\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          <p className=\"card-text2\">{subtitle}</p>\n          <button className=\"btn btn-light\">\n          <Link to={{ pathname: `/work/${_id}` }}>See more</Link>\n        </button>\n        <button\n          className=\"btn btn-light\"\n          onClick={event => _handleDelete(event)}\n        >\n          Delete\n        </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkCard;\n\n/* \n              key={work._id}\n              title={work.title}\n              subtitle={work.subtitle}\n              description={work.description}\n              image={work.image}\n*/\n","import React, { Component } from \"react\";\nimport \"./WorkCard.css\";\nimport Button from 'react-bootstrap/Button';\n\nimport { Link } from 'react-router-dom';\n\n\nconst AddWork = () => {\n    \n  return (\n       \n       <div className=\"card2 text-white bg-dark mb-3 border border-white\">\n                <img src=\"https://source.unsplash.com/collection/429524/800x450\" width=\"240px\" className=\"card-img-top\" alt=\"whatever\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Create a new Work</h5>\n                    <p className=\"card-text\"></p>\n                    {/* <p className=\"card-text\">id = {_id}</p> */}\n                    <button className=\"btn btn-light\">\n                        <Link to={{pathname: `/newwork`}}>Create now</Link>\n                    </button>               \n                </div> \n        </div> \n  );\n};\n\nexport default AddWork;\n\n","import React, { Component } from \"react\";\n\nimport Workservices from \"../../services/workservices\";\nimport WorkCard from \"./WorkCard\";\nimport AddWork from \"./AddWork\";\nimport \"./WorkList.css\";\n\nclass WorkList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      works: [],\n      userId: this.props.userData._id\n    };\n    this.services = new Workservices();\n  }\n\n  componentDidMount = () => {\n    this.getWorksFromUser();\n  };\n\n  getWorksFromUser = () => {\n    this.services\n      .getWorksFromUser(this.state.userId)\n      .then(allWorks => {\n        return this.setState({\n          works: allWorks\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  /*deleteWork = (idWork, idPortfolio) => {\n    this.service\n      .delete(`/work/delete/${idWork/idPortfolio}`)\n      .then(response => response.data);  \n  }*/\n\n  deleteWork = (work_id) => {\n    let workId = work_id._id;\n    this.services\n      .deleteWork(workId)\n      setTimeout(() => {\n        return this.updateWork()\n      }, 1000);\n      \n  };\n\n  updateWork = () => {\n    this.services\n      .getWorksFromUser(this.state.userId)\n      .then(works => {\n        console.log(works)\n        return this.setState({ works: works })}\n        )\n      // .catch(err => console.log(err));\n  };\n\n\n  render() {\n    // console.log(this.state.works);\n    return (\n      <div id=\"content\">\n        <h1>Works</h1>\n        \n        <div className=\"containerList\">\n        {this.state.works.length ? (\n          this.state.works.map(work => (\n            <WorkCard\n              _id={work._id}\n              key={work._id}\n              title={work.title}\n              subtitle={work.subtitle}\n              description={work.description}       \n              image={work.image}\n              deleteWork={work_id =>\n                  this.deleteWork(work_id)\n              }\n            />\n          ))\n        ) : (\n          <p>CARGANDO...</p>\n        )}\n        </div>\n        <AddWork refreshList={this.getWorksFromUser}/>\n      </div>\n    );\n  }\n}\n\n\n\nexport default WorkList;\n","import React from 'react'\nimport './Footer.css'\n\n\n//import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer page-footer font-small elegant-color-dark mt-5\">\n            <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n                <a href=\"https://www.fernandocomet.com/\"> @fernandocomet</a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n\n\n\n\n\n","import React, { Component } from 'react';\n\nimport Portfolioservices from \"../../services/portfolioservices\"\nimport Workservices from \"../../services/workservices\"\nimport \"./Match.css\";\n\nclass Match extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      portfolios: [],\n      works: [],\n      portfolioworks:[], \n      userId: this.props.userData._id\n    }\n    this.services = new Portfolioservices();\n    this.workservices = new Workservices();\n  }\n\n  /* era\n  userId: this.props.userData._id,\n  portfolioId: this.props.userData._id */\n\n  componentDidMount = () => {\n      this.getPortfoliosFromUser();\n      this.getWorksFromUser();\n      this.setState({\n        portfolio : this.props.portfolioData\n      })\n  }\n\n  getPortfoliosFromUser = () => {\n    //console.log(\"userId = \" + this.state.userId) \n    this.services\n        .getPortfoliosFromUser()\n        .then(allPortfolios => {\n            return this.setState({\n              portfolios: allPortfolios\n              //userId : _id  //No reconoce el _id\n            });\n          })\n          .catch(err => console.log(err));\n  }\n\n  getWorksFromUser = () => {\n    this.workservices\n        .getWorksFromUser()\n        .then(allWorks => {\n            return this.setState({\n              works: allWorks\n            });\n          })\n          .catch(err => console.log(err));\n  }\n\n  getPortfolioWorks = (e, portfolioId) => {\n    e.preventDefault();\n      this.services\n        .getPortfolioWorks(portfolioId)\n        .then(allportfolioworks => {\n          console.log(allportfolioworks)\n            return this.setState({\n              portfolioworks: allportfolioworks\n            });\n          })\n        .catch(err => console.log(err));\n  }\n \n  getWorkDetail = portfolioworks => {\n      //Meter los ids\n  }\n    \n\n \n\n  render() {\n    return (\n        <div className=\"container\">      \n            <div className=\"portfolios\">\n                <h2>Portfolios</h2>\n                {\n                    this.state.portfolios.map(portfolio => (\n                       <ul className=\"list-group\">\n                            <button type=\"button\" className=\"list-group-item list-group-item-action\"  onClick={(e) => this.getPortfolioWorks(e, portfolio._id)}> {portfolio.title} {portfolio._id} </button>\n                            {/*<li className=\"list-group-item list-group-item-dark\">{portfolio.title}</li>  onClick={event => this.getPortfolioWorks(portfolio._id)}\n                             <li className=\"list-group-item list-group-item-dark\" onClick={event => this.getPortfolioWorks(this.state.portfolioId)}>{portfolio.title}</li> \n                             \n                              onClick={event => _handleClick(event)}\n                             */}\n                        </ul>\n                    ))\n                }\n            </div>  \n            <div className=\"works\">\n                <h2>Works</h2>\n                {\n                    this.state.works.map(work => (\n                       <ul className=\"list-group\">\n                            <li type=\"button\" className=\"list-group-item list-group-item-action \"> {work.title} {work._id} </li>\n                            {/* <li className=\"list-group-item list-group-item-dark\">{work.title}</li> */}\n                        </ul>\n                    ))\n                }\n            </div>   \n            <div className=\"PortfolioWorks\">\n                <h2>Portfolio Works</h2>\n                {\n                    this.state.portfolioworks.map(portfoliowork => (\n                       <ul className=\"list-group\">\n                            <li type=\"button\" className=\"list-group-item list-group-item-action \"> {portfoliowork} </li>\n                            {/* <li className=\"list-group-item list-group-item-dark\">{work.title}</li> */}\n                        </ul>\n                    ))\n                }\n            </div>           \n        </div>\n        );\n    \n  }\n}\n\nexport default Match;\n/*\n<div className=\"row\">\n  <div className=\"col-4\">\n    <div className=\"list-group\" id=\"list-tab\" role=\"tablist\">\n      <a className=\"list-group-item list-group-item-action\" id=\"list-home-list\" data-toggle=\"list\" href=\"#list-home\" role=\"tab\" aria-controls=\"home\">{portfolio.title} </a>\n    </div>\n  </div>\n  <div className=\"col-8\">\n    <div className=\"tab-content\" id=\"nav-tabContent\">\n      <div className=\"tab-pane fade\" id=\"list-home\" role=\"tabpanel\" aria-labelledby=\"list-home-list\">...</div>\n      <div className=\"tab-pane fade\" id=\"list-profile\" role=\"tabpanel\" aria-labelledby=\"list-profile-list\">...</div>\n      <div className=\"tab-pane fade\" id=\"list-messages\" role=\"tabpanel\" aria-labelledby=\"list-messages-list\">...</div>\n      <div className=\"tab-pane fade\" id=\"list-settings\" role=\"tabpanel\" aria-labelledby=\"list-settings-list\">...</div>\n    </div>\n  </div>\n</div>\n*/","\nimport React, { Component } from 'react';\n\n\n//import { Link } from './node_modules/react-router-dom'\n\nconst FinalPortfolios = ({ title, imageUrl, _id }) => {\n    return (\n        <h1>Final Portfolios, here will come the festival</h1> \n    )\n}\n\nexport default FinalPortfolios\n","import React, { Component } from \"react\";\nimport \"./PortfolioDetails.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Portfolioservices from \"../../services/portfolioservices\";\n\nimport { Link } from \"react-router-dom\";\n\nclass PortfolioDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      portfolio: null\n    };\n    this.services = new Portfolioservices();\n  }\n\n  componentDidMount = () => {\n    this.getPortfolioDetail();\n  };\n\n  getPortfolioDetail = () => {\n    this.services\n      .getPortfolioDetail(this.props.match.params.id)\n      .then(theportfolio => this.setState({ portfolio: theportfolio }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"cardDetail\">\n        {this.state.portfolio ? (\n          //console.log(this.state.portfolio)\n          <div className=\"carding text-white bg-dark mb-3 border border-white\">\n            <img\n              src={this.state.portfolio.imagecover}\n              className=\"card-img-top\"\n              alt=\"whatever\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{this.state.portfolio.title}</h5>\n              <p className=\"card-text\">{this.state.portfolio.subtitle}</p>\n              <button className=\"btn btn-light\">\n                <Link\n                  to={{\n                    pathname: `/editportfolio/${this.state.portfolio._id}`\n                  }}\n                >\n                  Edit\n                </Link>\n              </button>\n              {/* <button className=\"btn btn-light\" onClick={() => this.deletePortfolio(this.state.portfolio._id)}>Delete</button> */}\n              {/* <Button className=\"btn btn-light\">Delete</Button>*/}\n            </div>\n          </div>\n        ) : (\n          console.log(this.state.portfolio)\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PortfolioDetails;\n\n","import React, { Component } from \"react\";\n//import \"./PortfolioDetails.css\";\n\nimport Workservices from \"../../services/workservices\";\n\nimport { Link } from \"react-router-dom\";\n\nclass WorkDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      work: null\n    };\n    this.services = new Workservices();\n  }\n\n  componentDidMount = () => {\n    this.getWorkDetail();\n  };\n\n  getWorkDetail = () => {\n    this.services\n      .getWorkDetail(this.props.match.params.id)\n      .then(thework => this.setState({ work: thework }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"cardDetail\">\n        {this.state.work ? (\n         \n         \n          <div className=\"carding text-white bg-dark mb-3 border border-white\">\n            <img\n              src={this.state.work.image}\n              className=\"card-img-top\"\n              alt=\"whatever\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{this.state.work.title}</h5>\n              <p className=\"card-text\">{this.state.work.subtitle}</p>\n              <button className=\"btn btn-light\">\n                <Link\n                  to={{\n                     pathname: `/editwork/${this.state.work._id}`\n                  }}\n                >\n                  Edit\n                </Link>\n              </button>\n              {/* <button className=\"btn btn-light\" onClick={() => this.deletePortfolio(this.state.portfolio._id)}>Delete</button> */}\n              {/* <Button className=\"btn btn-light\">Delete</Button>*/}\n            </div> \n          </div>\n        ) : (\n          console.log(this.state.work)\n        )}\n      </div>\n    );\n  }\n}\n\nexport default WorkDetails;\n\n","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: 'http://localhost:3000/api/files',\n            withCredentials: true   \n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile).then(response => response.data)\n}","import React, { Component } from 'react'\n\nimport Portfolioservices from '../../services/portfolioservices'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport FilesServices from '../../services/fileservices'\n\nclass CreatePortfolio extends Component {\n\n    constructor(props) {\n        super(props)\n        this.portfolioServices = new Portfolioservices()\n        this.filesServices = new FilesServices()\n        this.state = {\n            portfolio: {\n                alias: '',\n                title: '',\n                subtitle: '',\n                imagecover: ''\n            }\n        }\n        //this.services = new Portfolioservices();  ////?\n    }\n\n    finishAction = () => {\n        //this.props.closeModal()\n        this.props.refreshList()\n        \n    }\n\n    createPortfolioPost = () => {   \n        this.portfolioServices\n            .createPortfolioPost(this.state.portfolio)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            portfolio: { ...this.state.portfolio, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.createPortfolioPost() \n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imagecover\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinray es: ', response.secure_url) //ESTA URL Dudas me genera\n                this.setState({\n                    portfolio: { ...this.state.portfolio, imagecover: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Alias</Form.Label>\n                    <Form.Control type=\"text\" name=\"alias\" value={this.state.portfolio.alias} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Título</Form.Label>\n                    <Form.Control type=\"text\" name=\"title\" value={this.state.portfolio.title} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Subtitle</Form.Label>\n                    <Form.Control type=\"text\" name=\"subtitle\" value={this.state.portfolio.subtitle} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Image Cover</Form.Label>\n                    <Form.Control type=\"file\" name=\"imagecover\" onChange={this.handleFileUpload} />\n                    {/* <Form.Control type=\"text\" name=\"imagecover\" value={this.state.portfolio.imagecover} onChange={this.handleChange} /> */}\n                </Form.Group>\n\n                <Button variant=\"dark\" type=\"submit\">Create New Portfolio</Button>\n            </Form>\n        )\n    }\n}\n\nexport default CreatePortfolio","import React, { Component } from 'react'\n\nimport Portfolioservices from '../../services/portfolioservices'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport FilesServices from '../../services/fileservices'\nimport { Link } from 'react-router-dom';\n\nclass EditPortfolio extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            portfolio: null\n        };\n        this.services = new Portfolioservices();\n    }\n\n    componentDidMount = () => {\n        this.getPortfolioDetail();\n    };\n\n    getPortfolioDetail = () => {\n        this.services\n            .getPortfolioDetail(this.props.match.params.id)\n            //.then(console.log(this.props.match.params.id))\n            .then(theportfolio => this.setState({ portfolio: theportfolio }))\n            .catch(err => console.log(err));\n    };\n\n    render() {\n\n        return (\n            <div>\n                <h1>Edit portfolio</h1>\n                {/*<h2>hola {this.state.portfolio.params.id}</h2> */}\n                <Form onSubmit={this.handleSubmit}>\n                \n                 <Form.Group>\n                    <Form.Label>Alias</Form.Label>\n                    <Form.Control type=\"text\" name=\"alias\" value={this.props.match.params.alias} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Título</Form.Label>\n                    <Form.Control type=\"text\" name=\"title\" value={this.props.match.params.title} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Subtitle</Form.Label>\n                    <Form.Control type=\"text\" name=\"subtitle\" value={this.props.match.params.subtitle} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Image Cover</Form.Label>\n                    <Form.Control type=\"file\" name=\"imagecover\" onChange={this.handleFileUpload} />\n                    <Form.Control type=\"text\" name=\"imagecover\" value={this.props.match.params.imagecover} onChange={this.handleChange} /> \n                </Form.Group> \n\n                <Button variant=\"dark\" type=\"submit\">Save Portfolio</Button>\n            </Form>\n            </div>\n \n        )\n    }\n}\n\nexport default EditPortfolio\n\n\n","import React, { Component } from 'react'\n\nimport Workservices from '../../services/workservices'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport FilesServices from '../../services/fileservices'\n\nclass CreateWork extends Component {\n\n    constructor(props) {\n        super(props)\n        this.workServices = new Workservices()\n        this.filesServices = new FilesServices()\n        this.state = {\n            work: {\n                title: '',\n                subtitle: '',\n                description: '',\n                image: ''\n            }\n        }\n        //this.services = new Workservices();  ////?\n    }\n\n    finishAction = () => {\n        //this.props.closeModal()\n        this.props.refreshList()\n    }\n\n    createWorkPost = () => {   \n        this.workServices\n            .createWorkPost(this.state.portfolio)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            work: { ...this.state.work, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.createWorkPost() \n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"image\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinray es: ', response.secure_url) //ESTA URL Dudas me genera\n                this.setState({\n                    work: { ...this.state.work, image: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control type=\"text\" name=\"title\" value={this.state.work.title} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Subtitle</Form.Label>\n                    <Form.Control type=\"text\" name=\"subtitle\" value={this.state.work.subtitle} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control type=\"text\" name=\"description\" value={this.state.work.description} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Image Work</Form.Label>\n                    <Form.Control type=\"file\" name=\"image\" onChange={this.handleFileUpload} />\n                    {/* <Form.Control type=\"text\" name=\"image\" value={this.state.work.image} onChange={this.handleChange} /> */}\n                </Form.Group>\n\n                <Button variant=\"dark\" type=\"submit\">Create New Work</Button>\n            </Form>\n        )\n    }\n}\n\nexport default CreateWork","import React, { Component } from 'react'\n\nimport Workservices from \"../../services/workservices\";\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport FilesServices from '../../services/fileservices'\nimport { Link } from 'react-router-dom';\n\nclass EditWork extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            work: null\n        };\n        this.services = new Workservices();\n    }\n\n    componentDidMount = () => {\n        this.getWorkDetail();\n    };\n\n    getWorkDetail = () => {\n        this.services\n            .getWorkDetail(this.props.match.params.id)\n            //.then(console.log(this.props.match.params.id))\n            .then(thework => this.setState({ work: thework }))\n            .catch(err => console.log(err));\n    };\n\n    render() {\n\n        return (\n            <div>\n                <h1>Edit work</h1>\n                {/*<h2>hola {this.state.work.params.id}</h2> */}\n                <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control type=\"text\" name=\"title\" value={this.props.match.params.title} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Subtitle</Form.Label>\n                    <Form.Control type=\"text\" name=\"subtitle\" value={this.props.match.params.subtitle} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control type=\"text\" name=\"description\" value={this.props.match.params.description} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Image Work</Form.Label>\n                    <Form.Control type=\"file\" name=\"image\" onChange={this.handleFileUpload} />\n                    {/* <Form.Control type=\"text\" name=\"image\" value={this.state.work.image} onChange={this.handleChange} /> */}\n                </Form.Group>\n\n                <Button variant=\"dark\" type=\"submit\">Create New Work</Button>\n            </Form>\n            </div>\n \n        )\n    }\n}\n\nexport default EditWork\n\n\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from \"./components/navbar/Navbar\";\n// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Contents from \"./components/contents/Contents\";\nimport PortfolioList from \"./components/portfolioList/PortfolioList\";\nimport WorkList from \"./components/workList/WorkList\";\nimport Footer from \"./components/footer/Footer\";\nimport Match from \"./components/match/Match\";\nimport FinalPortfolios from \"./components/FinalPortfolios/FinalPortfolios\";\nimport PortfolioDetails from \"./components/portfolioDetails/PortfolioDetails\";\nimport WorkDetails from \"./components/workDetails/WorkDetails\";\nimport CreatePortfolio from \"./components/portfolioForm/CreatePortfolio\";\nimport EditPortfolio from \"./components/portfolioForm/EditPortfolio\";\nimport CreateWork from \"./components/workForm/CreateWork\";\nimport EditWork from \"./components/workForm/EditWork\";\nimport Portfolioservices from \"./services/portfolioservices\";\nimport 'reset-css';\n\n\n\n//App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\nclass App extends Component {\n  //en el tiempo de construcción de la aplicación, creamos una instancia del authservice\n  constructor(props) {\n    super(props);\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = { \n      loggedInUser: null,\n      portfolios:null\n    }\n    this.service = new AuthService()\n    this.services = new Portfolioservices()\n   \n\n    //this.fetchUser()\n  }\n\n  componentDidUpdate = (prevProps, prevState) => console.log(\"App Updated:\", this.state)\n  componentDidMount = () => this.fetchUser()\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  updatePortfolio = (event) => {\n    event.preventDefault()\n    this.services\n      .getPortfoliosFromUser(this.state.loggedInUser._id)\n      .then(portfolios => this.setState({ portfolios: portfolios }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>  \n                <Route path=\"/portfolio/:id\" render={props => <PortfolioDetails {...props} />} />\n                <Route path=\"/newportfolio\" render={props => <CreatePortfolio {...props} />} />\n                <Route path=\"/editportfolio/:id\" render={props => <EditPortfolio {...props} />} />\n\n                <Route path=\"/work/:id\" render={props => <WorkDetails {...props} />} />\n                <Route path=\"/newwork\" render={props => <CreateWork {...props} />} />\n                <Route path=\"/editwork/:id\" render={props => <EditWork {...props} />} />\n                {/* <Route path=\"/editwork/:id\" render={props => <EditWork {...props} />} /> */}\n\n                {/* <Route path=\"/home\" render={props => <Contents {...props} />} /> */}\n                {/* <Route exact path=\"/home\" component={App} />*/}\n                <Route exact path=\"/match\" render={props => <Match userData={this.state.loggedInUser} portfolioData={this.state.portfolios} />} />\n                <Route exact path=\"/portfolios\" component={FinalPortfolios} />  \n                <Route path=\"/home\" render={props => \n                  <>\n                    <PortfolioList userData={this.state.loggedInUser} updatePortfolio={(event) => this.updatePortfolio(event)} />\n                    <WorkList userData={this.state.loggedInUser} /> \n                  </>\n                }\n                  />\n              </Switch>\n              <Contents /> \n               {/* <PortfolioList userData={this.state.loggedInUser} />\n               <WorkList userData={this.state.loggedInUser} />  */}\n              \n\n              <Footer />\n              \n            </header>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>\n                <div className=\"tolog\">\n                   <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                   <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n                </div>\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'reset-css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}