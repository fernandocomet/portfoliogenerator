{"version":3,"sources":["logo.svg","components/auth/AuthService.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/contents/Contents.js","services/portfolioservices.js","components/portfolioList/PortfolioCard.js","components/portfolioList/AddPortfolio.js","components/portfolioList/PortfolioList.js","services/workservices.js","components/workList/WorkCard.js","components/workList/WorkList.js","components/footer/Footer.js","components/match/Match.js","components/FinalPortfolios/FinalPortfolios.js","components/portfolioDetails/PortfolioDetails.js","services/fileservices.js","components/portfolioForm/CreatePortfolio.js","components/portfolioForm/EditPortfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","withCredentials","Navbar","props","handleLogout","e","state","loggedInUser","nextProps","setState","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","onClick","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","target","name","value","onSubmit","onChange","Login","Contents","Services","getAllUsers","getUserDetail","getPortfoliosFromUser","user_id","createPortfolioPost","portfolio","getAllPortfolios","getPortfolioDetail","getPortfolioWorks","deletePortfolio","delete","createPortfolioGet","editPortfolioToGet","editPortfolioToPost","editPortfolioCover","PortfolioCard","_id","title","subtitle","imagecover","src","width","alt","pathname","_handleDelete","AddPortfolio","PortfolioList","componentDidMount","services","userId","allPortfolios","portfolios","err","console","log","portfolio_id","portfolioId","updatePortfolio","closeModal","showmodal","openModal","userData","Portfolioservices","length","map","key","alias","Modal","show","onHide","Body","getWorksFromUser","getAllWorks","getWorkDetail","deleteWork","createWorkGet","createWorkPost","editWorkToGet","editWorkToPost","deleteWorkImage","createImageWork","WorkCard","image","description","WorkList","allWorks","works","Workservices","work","Footer","Match","FinalPortfolios","imageUrl","PortfolioDetails","match","params","theportfolio","handleUpload","theFile","CreatePortfolio","finishAction","refreshList","portfolioServices","handleSubmit","handleFileUpload","uploadData","FormData","append","files","filesServices","secure_url","FilesServices","Form","Group","Label","Control","Button","variant","EditPortfolio","App","componentDidUpdate","prevProps","prevState","fetchUser","userObj","Fragment","userInSession","path","render","exact","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5cd6a8a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `http://localhost:4000/api/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService\";\nimport logo from \"../../logo.svg\";\nimport \"./Navbar.css\"\n\n\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark container-fluid\">\n          <span className=\"navbar-brand\" href=\"#\">PortfolioGenerator</span>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                  {/* <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a> */}\n                  <Link to=\"/home\" className=\"nav-link\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                  {/* <a className=\"nav-link\" href=\"#\">Match</a> */}\n                  <Link to=\"/match\" className=\"nav-link\">Match</Link>\n                </li>\n                <li className=\"nav-item\">\n                  {/* <a className=\"nav-link\" href=\"#\">Portfolios</a> */}\n                  <Link to=\"/portfolios\" className=\"nav-link\">Portfolios</Link>\n                </li>\n              </ul>\n              <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                  <ul className=\"navbar-nav ml-auto\">\n                      <li className=\"nav-item\">\n                          <span className=\"nav-link\">{this.state.loggedInUser.username}</span>\n                      </li>\n                      <li className=\"nav-item\">\n                          <span className=\"nav-link\"><span onClick={this.handleLogout}>Logout</span></span>\n                      </li>\n                  </ul>\n              </div>\n          </div>\n        </nav>\n        \n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul>\n              <li>\n                <Link to=\"/signup\">Signup</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport AuthService from './AuthService'\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Welcome!, create your account next:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from './AuthService'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <h3>Please, login to our site</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\n\n//clase componente que renderiza los contenidos genéricos\n//usando rendering condicional y el componente Switch que ya conocéis podéis mostrar los contenidos oportunos que queráis\nclass Contents extends Component {\n  render() {\n    return (<div>\n        <p>Content - The quick brown fox jumps over the lazy dog.</p>\n        </div>);\n    \n  }\n}\n\nexport default Contents;\n\n\n  ","import axios from \"axios\";\n\nexport default class Services {\n  constructor() {\n    this.service = axios.create({\n      baseURL: \"http://localhost:4000/api/portfolios\",\n      withCredentials: true\n    });\n  }\n\n  //User\n  getAllUsers = () =>\n    this.service.get(\"/allusers\").then(response => response.data);\n  getUserDetail = () =>\n    this.service.get(\"/user/:id\").then(response => response.data);\n\n  getPortfoliosFromUser = user_id =>\n    this.service\n      .get(\"/userportfolios\", user_id)\n      .then(response => response.data);\n\n  //Portfolio\n  //postCoaster = coaster => this.service.post(`/new`, coaster).then(response => response.data)\n  createPortfolioPost = portfolio =>\n    this.service\n      .post(\"/newportfolio\", portfolio)\n      .then(response => response.data);\n\n  getAllPortfolios = () =>\n    this.service.get(\"/allportfolios\").then(response => response.data);\n\n  // getPortfolioDetail = id =>\n  //   this.service.get(\"/portfolio/:id\").then(response => response.data);\n\n  getPortfolioDetail = id =>\n    this.service.get(`/portfolio/${id}`).then(response => response.data);\n\n  getPortfolioWorks = () =>\n    this.service.get(\"/portfolio/:id/works\").then(response => response.data);\n\n  deletePortfolio = id =>\n    this.service\n      .delete(`/portfolio/delete/${id}`)\n      .then(response => response.data);\n\n  createPortfolioGet = () =>\n    this.service.get(\"/newportfolio\").then(response => response.data);\n\n  //createPortfolioPost = () =>\n  //this.service.post(\"/newportfolio\").then(response => response.data);\n  editPortfolioToGet = () =>\n    this.service.get(\"/portfolio/:id\").then(response => response.data);\n\n  editPortfolioToPost = id =>\n    this.service.get(`/editportfolio/${id}`).then(response => response.data);\n\n  // editPortfolioToPost = () =>\n  //   this.service.post(\"/editportfolio/:id\").then(response => response.data);\n\n  editPortfolioCover = () =>\n    this.service\n      .post(\"/editportfoliocover/:id\")\n      .then(response => response.data);\n}\n\n/*\nRoute changed adding \"/portfolios\"\nSo what I had as http://localhost:4000/portfolios/userportfolios\nis now http://localhost:4000/api/portfolios/userportfolios\n*/\n","import React, { Component } from \"react\";\nimport \"./PortfolioCard.css\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { Link } from \"react-router-dom\";\n\nconst PortfolioCard = ({\n  _id,\n  title,\n  subtitle,\n  imagecover,\n  deletePortfolio\n}) => {\n  const _handleDelete = event => {\n    event.preventDefault();\n    {\n      deletePortfolio({ _id });\n    }\n  };\n\n  return (\n    <div className=\"card text-white bg-dark mb-3 border border-white\">\n      <img\n        src={imagecover}\n        width=\"240px\"\n        className=\"card-img-top\"\n        alt=\"whatever\"\n      />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text\">{subtitle}</p>\n        {/* <p className=\"card-text\">id = {_id}</p> */}\n        <button className=\"btn btn-light\">\n          <Link to={{ pathname: `/portfolio/${_id}` }}>See more</Link>\n        </button>\n        <button\n          className=\"btn btn-light\"\n          onClick={event => _handleDelete(event)}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default PortfolioCard;\n\n/*\nComing from my father:\n            key={portfolio._id} \n            alias={portfolio.alias}  \n            title={portfolio.title}\n            subtitle={portfolio.subtitle}\n            imagecover={portfolio.imagecover}\n*/\n","import React, { Component } from \"react\";\nimport \"./PortfolioCard.css\";\nimport Button from 'react-bootstrap/Button';\n\nimport { Link } from 'react-router-dom';\n\n\nconst AddPortfolio = () => {\n    \n  return (\n       \n       <div className=\"card text-white bg-dark mb-3 border border-white\">\n                <img src=\"https://source.unsplash.com/collection/429524/800x450\" width=\"240px\" className=\"card-img-top\" alt=\"whatever\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Create a new Portfolio</h5>\n                    <p className=\"card-text\"></p>\n                    {/* <p className=\"card-text\">id = {_id}</p> */}\n                    <button className=\"btn btn-light\">\n                        <Link to={{pathname: `/newportfolio`}}>Create now</Link>\n                    </button>               \n                </div> \n        </div> \n  );\n};\n\nexport default AddPortfolio;\n\n","import React, { Component } from \"react\";\n\nimport Portfolioservices from \"../../services/portfolioservices\";\nimport PortfolioCard from \"./PortfolioCard\";\nimport AddPortfolio from \"./AddPortfolio\";\nimport \"./PortfolioList.css\";\n\nimport Modal from \"react-bootstrap/Modal\";\n\nclass PortfolioList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      portfolios: [],\n      userId: this.props.userData._id,\n      showmodal: false\n    };\n    this.services = new Portfolioservices();\n  }\n\n  componentDidMount = () => {\n    this.getPortfoliosFromUser();\n  };\n\n  getPortfoliosFromUser = () => {\n    this.services\n      .getPortfoliosFromUser(this.state.userId)\n      .then(allPortfolios => {\n        return this.setState({\n          portfolios: allPortfolios\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deletePortfolio = portfolio_id => {\n    let portfolioId = portfolio_id._id;\n    this.services\n      .deletePortfolio(portfolioId)\n      .then(() => this.updatePortfolio())\n      .catch(err => console.log(err));\n  };\n\n  updatePortfolio = () => {\n    this.services\n      .getPortfoliosFromUser(this.state.userId)\n      .then(portfolios => this.setState({ portfolios: portfolios }))\n      .catch(err => console.log(err));\n  };\n\n  closeModal = () => this.setState({ showmodal: false });\n  openModal = () => this.setState({ showmodal: true });\n\n  render() {\n    console.log(this.state.portfolios);\n    return (\n      <div>\n        <h1>Portfolios</h1>\n        <AddPortfolio></AddPortfolio>\n        <div className=\"container\">\n          {this.state.portfolios.length ? (\n            this.state.portfolios.map(portfolio => (\n              <PortfolioCard\n                _id={portfolio._id}\n                key={portfolio._id}\n                alias={portfolio.alias}\n                title={portfolio.title}\n                subtitle={portfolio.subtitle}\n                imagecover={portfolio.imagecover}\n                deletePortfolio={portfolio_id =>\n                  this.deletePortfolio(portfolio_id)\n                }\n              />\n            ))\n          ) : (\n            <p>CARGANDO...</p>\n          )}\n          <Modal show={this.state.showmodal} onHide={this.closeModal}>\n            <Modal.Body>\n              <h3>New Portfolio</h3>\n              <hr></hr>\n              {/* <CoasterForm closeModal={this.closeModal} refreshList={this.getAllCoasters} /> */}\n            </Modal.Body>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PortfolioList;\n","import axios from \"axios\";\n\nexport default class Services {\n  constructor() {\n    this.service = axios.create({\n      baseURL: \"http://localhost:4000/works\",\n      withCredentials: true\n    });\n  }\n\n  //Work\n  getWorksFromUser = user_id =>\n    this.service\n    .get(\"/userworks\", user_id)\n    .then(response => response.data);\n\n  getAllWorks = () =>\n    this.service.get(\"/allworks\").then(response => response.data);\n  getWorkDetail = () =>\n    this.service.get(\"/work/:id\").then(response => response.data);\n  deleteWork = () =>\n    this.service.delete(\"/work/delete/:id\").then(response => response.data);\n  createWorkGet = () =>\n    this.service.get(\"/newwork\").then(response => response.data);\n  createWorkPost = () =>\n    this.service.post(\"/newwork\").then(response => response.data);\n  editWorkToGet = () =>\n    this.service.get(\"/editwork/:id\").then(response => response.data);\n  editWorkToPost = () =>\n    this.service.post(\"/editwork/:id\").then(response => response.data);\n\n  //Image\n  deleteWorkImage = () =>\n    this.service.delete(\"/deleteImageWork/:id\").then(response => response.data);\n  createImageWork = () =>\n    this.service.post(\"/uploadImageWork/:id\").then(response => response.data);\n}\n","import React, { Component } from 'react';\nimport './WorkCard.css'\n\n//import { Link } from './node_modules/react-router-dom'\n\nconst WorkCard = ({ title, subtitle, description, image }) => {\n    return (\n        <div>\n        <div className=\"card text-white bg-dark mb-3 border border-white\">\n            <img src={image} width=\"240px\" className=\"card-img-top\" alt=\"whatever\"/>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{title}</h5>\n                <p className=\"card-text\">{subtitle}</p>\n                <button className=\"btn btn-light\">See more</button>\n            </div> \n        </div>\n    </div>\n    )\n}\n\nexport default WorkCard\n\n/* \n              key={work._id}\n              title={work.title}\n              subtitle={work.subtitle}\n              description={work.description}\n              image={work.image}\n*/\n","import React, { Component } from \"react\";\n\nimport Workservices from \"../../services/workservices\";\nimport WorkCard from \"./WorkCard\";\nimport AddWork from \"./WorkCard\";\nimport \"./WorkList.css\";\n\nclass WorkList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      works: [],\n      userId: this.props.userData._id\n    };\n    this.services = new Workservices();\n    //console.log(this.props.userData);\n  }\n\n  componentDidMount = () => {\n    this.getWorksFromUser();\n  };\n\n  getWorksFromUser = () => {\n    this.services\n      .getWorksFromUser(this.state.userId)\n      .then(allWorks => {\n        return this.setState({\n          works: allWorks\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n\n  render() {\n\n    return (\n      <div>\n        <h1>Works</h1>\n        <div className=\"container\">\n        {this.state.works.length ? (\n          this.state.works.map(work => (\n            <WorkCard\n              key={work._id}\n              title={work.title}\n              subtitle={work.subtitle}\n              description={work.description}       \n              image={work.image}\n            />\n          ))\n        ) : (\n          <p>CARGANDO...</p>\n        )}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default WorkList;\n","import React from 'react'\nimport './Footer.css'\n\n\n//import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer page-footer font-small elegant-color-dark mt-5\">\n            <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n                <a href=\"https://www.fernandocomet.com/\"> @fernandocomet</a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n\n\n\n\n\n","//import React, { Component } from './node_modules/react';\nimport React, { Component } from 'react';\n\nimport Portfolioservices from \"../../services/portfolioservices\"\nimport PortfolioCard from \"../portfolioList/PortfolioCard\"\nimport WorkCard from \"../workList/WorkCard\"\n\nclass Match extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      portfolios: [],\n      works: []\n    }\n    this.services = new Portfolioservices();\n  }\n\n  componentDidMount = () => {\n      this.getPortfoliosFromUser();\n      this.getWorksFromUser();\n  }\n\n  getPortfoliosFromUser = () => {\n    this.services.getPortfoliosFromUser()\n        .then(allPortfolios => this.setState({ portfolios : allPortfolios}))\n        .catch(err => console.log(err))\n        //console.log(portfolios)  => Not defined????\n  }\n\n  getWorksFromUser = () => {\n    this.services.getWorksFromUser()\n        .then(allWorks => this.setState({ works : allWorks}))\n        .catch(err => console.log(err))\n        //console.log(works)  => Not defined????\n  }\n\n\n  render() {\n    return (\n        <div className=\"container\">\n            <h1>Match Portfolios with works</h1>\n            <h2>Portfolios List</h2>\n            {/* See https://getbootstrap.com/docs/4.4/components/list-group/ JavaScript behavior */}\n                {/* {this.props.loggedInUser && <AddPortfolio></AddPortfolio>}  */}\n                {this.state.portfolios.length ? (\n                    <div>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item active list-group-item-dark\">Cras justo odio</li>\n                            <li className=\"list-group-item list-group-item-dark\">Dapibus ac facilisis in</li>\n                            <li className=\"list-group-item list-group-item-dark\">Morbi leo risus</li>\n                            <li className=\"list-group-item list-group-item-dark\">Porta ac consectetur ac</li>\n                            <li className=\"list-group-item list-group-item-dark\">Vestibulum at eros</li>\n                        </ul>\n                    </div>\n                )\n                    :\n                    <p>CARGANDO...</p>\n\n                }\n            <h2>Woks List</h2>    \n                {/* {this.props.loggedInUser && <AddWork></AddWork>}  */}\n                {this.state.works.length ? (\n                    <div>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item list-group-item-dark active\">Cras justo odio</li>\n                            <li className=\"list-group-item list-group-item-dark\">Dapibus ac facilisis in</li>\n                            <li className=\"list-group-item list-group-item-dark\">Morbi leo risus</li>\n                            <li className=\"list-group-item list-group-item-dark\">Porta ac consectetur ac</li>\n                            <li className=\"list-group-item list-group-item-dark\">Vestibulum at eros</li>\n                        </ul>\n                    </div>\n                )\n                    :\n                    <p>CARGANDO...</p>\n\n                }\n                <h2>Urls List</h2>    \n                {/* {this.props.loggedInUser && <AddWork></AddWork>}  */}\n                {this.state.works.length ? (\n                    <div>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item list-group-item-dark active\">Cras justo odio</li>\n                            <li className=\"list-group-item list-group-item-dark\">Dapibus ac facilisis in</li>\n                            <li className=\"list-group-item list-group-item-dark\">Morbi leo risus</li>\n                            <li className=\"list-group-item list-group-item-dark\">Porta ac consectetur ac</li>\n                            <li className=\"list-group-item list-group-item-dark\">Vestibulum at eros</li>\n                        </ul>\n                    </div>\n                )\n                    :\n                    <p>CARGANDO...</p>\n\n                }\n        </div>\n        );\n    \n  }\n}\n\nexport default Match;\n","\nimport React, { Component } from 'react';\n\n\n//import { Link } from './node_modules/react-router-dom'\n\nconst FinalPortfolios = ({ title, imageUrl, _id }) => {\n    return (\n        <h1>Final Portfolios, here will come the festival</h1> \n    )\n}\n\nexport default FinalPortfolios\n","import React, { Component } from \"react\";\nimport \"./PortfolioDetails.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Portfolioservices from \"../../services/portfolioservices\";\n\nimport { Link } from \"react-router-dom\";\n\nclass PortfolioDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      portfolio: null\n    };\n    this.services = new Portfolioservices();\n  }\n\n  componentDidMount = () => {\n    this.getPortfolioDetail();\n  };\n\n  getPortfolioDetail = () => {\n    this.services\n      .getPortfolioDetail(this.props.match.params.id)\n      .then(theportfolio => this.setState({ portfolio: theportfolio }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"cardDetail\">\n        {this.state.portfolio ? (\n          //console.log(this.state.portfolio)\n          <div className=\"carding text-white bg-dark mb-3 border border-white\">\n            <img\n              src={this.state.portfolio.imagecover}\n              className=\"card-img-top\"\n              alt=\"whatever\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{this.state.portfolio.title}</h5>\n              <p className=\"card-text\">{this.state.portfolio.subtitle}</p>\n              <button className=\"btn btn-light\">\n                <Link\n                  to={{\n                    pathname: `/editportfolio/${this.state.portfolio._id}`\n                  }}\n                >\n                  Edit\n                </Link>\n              </button>\n              {/* <button className=\"btn btn-light\" onClick={() => this.deletePortfolio(this.state.portfolio._id)}>Delete</button> */}\n              {/* <Button className=\"btn btn-light\">Delete</Button>*/}\n            </div>\n          </div>\n        ) : (\n          console.log(this.state.portfolio)\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PortfolioDetails;\n\n/*\n<button className=\"btn btn-light\">\n    <Link to={{pathname: `/editportfolio/${_id}`}}>Edit</Link>\n</button>     \n\n/editportfolio/:id\n\nthis.state.portfolio._id\n*/\n","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: 'http://localhost:3000/api/files',\n            withCredentials: true   \n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile).then(response => response.data)\n}","import React, { Component } from 'react'\n\nimport Portfolioservices from '../../services/portfolioservices'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport FilesServices from '../../services/fileservices'\n\nclass CreatePortfolio extends Component {\n\n    constructor(props) {\n        super(props)\n        this.portfolioServices = new Portfolioservices()\n        this.filesServices = new FilesServices()\n        this.state = {\n            portfolio: {\n                alias: '',\n                title: '',\n                subtitle: '',\n                imagecover: ''\n            }\n        }\n        //this.services = new Portfolioservices();  ////?\n    }\n\n    finishAction = () => {\n        //this.props.closeModal()\n        this.props.refreshList()\n    }\n\n    createPortfolioPost = () => {   \n        this.portfolioServices.createPortfolioPost(this.state.portfolio)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            portfolio: { ...this.state.portfolio, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.createPortfolioPost() \n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imagecover\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinray es: ', response.secure_url) //ESTA URL Dudas me genera\n                this.setState({\n                    portfolio: { ...this.state.portfolio, imagecover: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Alias</Form.Label>\n                    <Form.Control type=\"text\" name=\"alias\" value={this.state.portfolio.alias} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Título</Form.Label>\n                    <Form.Control type=\"text\" name=\"title\" value={this.state.portfolio.title} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Subtitle</Form.Label>\n                    <Form.Control type=\"text\" name=\"subtitle\" value={this.state.portfolio.subtitle} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Image Cover</Form.Label>\n                    <Form.Control type=\"file\" name=\"imagecover\" onChange={this.handleFileUpload} />\n                    {/* <Form.Control type=\"text\" name=\"imagecover\" value={this.state.portfolio.imagecover} onChange={this.handleChange} /> */}\n                </Form.Group>\n\n                <Button variant=\"dark\" type=\"submit\">Create New Portfolio</Button>\n            </Form>\n        )\n    }\n}\n\nexport default CreatePortfolio","import React, { Component } from 'react'\n\nimport Portfolioservices from '../../services/portfolioservices'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport FilesServices from '../../services/fileservices'\nimport { Link } from 'react-router-dom';\n\nclass EditPortfolio extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            portfolio: null\n        };\n        this.services = new Portfolioservices();\n\n    }\n\n    componentDidMount = () => {\n        this.getPortfolioDetail();\n    };\n\n    getPortfolioDetail = () => {\n        this.services\n            .getPortfolioDetail(this.props.match.params.id)\n            .then(theportfolio => this.setState({ portfolio: theportfolio }))\n            .catch(err => console.log(err));\n    };\n\n    render() {\n\n        return (\n            <div>\n                {/* <h1>hola {this.state.portfolio.title}</h1> */}\n            </div>\n \n        )\n    }\n}\n\nexport default EditPortfolio\n\n\n//{this.state.portfolio}\n       /*\n            <Form onSubmit={this.handleSubmit}>\n                <h1>EditPortfolio</h1> \n                \n                 <Form.Group>\n                    <Form.Label>Alias</Form.Label>\n                    <Form.Control type=\"text\" name=\"alias\" value={this.state.portfolio.alias} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Título</Form.Label>\n                    <Form.Control type=\"text\" name=\"title\" value={this.state.portfolio.title} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Subtitle</Form.Label>\n                    <Form.Control type=\"text\" name=\"subtitle\" value={this.state.portfolio.subtitle} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Image Cover</Form.Label>\n                    <Form.Control type=\"file\" name=\"imagecover\" onChange={this.handleFileUpload} />\n                    <Form.Control type=\"text\" name=\"imagecover\" value={this.state.portfolio.imagecover} onChange={this.handleChange} /> \n                </Form.Group> \n\n                <Button variant=\"dark\" type=\"submit\">Create New Portfolio</Button>\n            </Form>\n        */","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\n// import ProjectList from './components/projects/ProjectList';\nimport Navbar from \"./components/navbar/Navbar\";\n// import ProjectDetails from './components/projects/ProjectDetails';\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./components/auth/AuthService\";\nimport Contents from \"./components/contents/Contents\";\nimport PortfolioList from \"./components/portfolioList/PortfolioList\";\nimport WorkList from \"./components/workList/WorkList\";\nimport Footer from \"./components/footer/Footer\";\nimport Match from \"./components/match/Match\";\nimport FinalPortfolios from \"./components/FinalPortfolios/FinalPortfolios\";\nimport PortfolioDetails from \"./components/portfolioDetails/PortfolioDetails\";\nimport CreatePortfolio from \"./components/portfolioForm/CreatePortfolio\";\nimport EditPortfolio from \"./components/portfolioForm/EditPortfolio\";\n\n\n\n//App es la aplicación base, que se sirve del servicio AuthService para conectar con la bbdd\nclass App extends Component {\n  //en el tiempo de construcción de la aplicación, creamos una instancia del authservice\n  constructor(props) {\n    super(props);\n    //arrancamos el estado con un valor de loggedInUser con nada (luego lo vamos a reemplazar con el valor real)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n\n    //this.fetchUser()\n  }\n\n  componentDidUpdate = (prevProps, prevState) => console.log(\"App Updated:\", this.state)\n  componentDidMount = () => this.fetchUser()\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  //este método vuelca la información del usuario y lo guarda en el state de app que siempre puedes revisitar\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  render() {\n    //aqui hacemos rendering condicional dependiendo de si tenemos un usuario logeado o no\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>  \n                <Route path=\"/portfolio/:id\" render={props => <PortfolioDetails {...props} />} />\n                <Route path=\"/newportfolio\" render={props => <CreatePortfolio {...props} />} />\n                <Route path=\"/editportfolio/:id\" render={props => <EditPortfolio {...props} />} />\n\n                {/* <Route path=\"/home\" render={props => <Contents {...props} />} /> */}\n                {/* <Route exact path=\"/home\" component={App} />*/}\n                <Route exact path=\"/match\" render={props => <Match {...props} />} />\n                <Route exact path=\"/portfolios\" component={FinalPortfolios} />  \n                <Route path=\"/home\" render={props => \n                  <>\n                    <PortfolioList userData={this.state.loggedInUser} />\n                    <WorkList userData={this.state.loggedInUser} /> \n                  </>\n                }\n                  />\n              </Switch>\n              <Contents /> \n               {/* <PortfolioList userData={this.state.loggedInUser} />\n               <WorkList userData={this.state.loggedInUser} />  */}\n              \n\n              <Footer />\n              \n            </header>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      //si no estás logeado, mostrar opcionalmente o login o signup\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default App;\n\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}